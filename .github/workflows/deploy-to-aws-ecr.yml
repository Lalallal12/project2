name: Deploy to AMAZON ECS

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: "ap-northeast-2"                                # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: ${{ secrets.RORA_ECR_REPOSITORY }}          # set this to your Amazon ECR repository name
  ECS_SERVICE: helloworld-was-svc                             # set this to your Amazon ECS service name
  ECS_CLUSTER: helloworld-was-cluster                         # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: helloworld-was-task-definitions.json   # set this to the path to your Amazon ECS task definition
                                                              # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: helloworld-was-container                    # set this to the name of the container in the
                                                              # containerDefinitions section of your task definition
  ROLE_ARN: ${{ secrets.RORA_ECR_ROLE_ARN }}

permissions:
  contents: read
  id-token: write   # This is required for requesting the JWT

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: "1. github runner에 레파지토리 체크아웃"
      uses: actions/checkout@v3
      
    - name: "2. AWS credential 설정"
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: ${{ env.AWS_REGION }}
        role-session-name: GitHubActions
        role-to-assume: ${{ env.ROLE_ARN }}

    # Login to Amazon ECR Private, then build and push a Docker image: (cf. public)
    - name: "3. AMAZON ECR 로그인"
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: "4. AMAZON ECR에 이미지 빌드, 태그, 푸시"
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        cd ./helloworld-was
        docker build -t $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG .
        docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG" >> $GITHUB_OUTPUT
        cd ../

    - name: "5. AMAZON ECS 작업 정의 안에 새로운 이미지ID 입력"
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}

    - name: "6. 아마존 ECS "
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
