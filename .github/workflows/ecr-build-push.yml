# https://github.com/aws-actions/amazon-ecr-login#login-to-amazon-ecr-public-then-build-and-push-a-docker-image
name: build & push docker image to AWS ECR

on:
  push:
    branches: [ "main", "rora" ]
  pull_request:
    branches: [ "main", "rora" ]
  
env:
  #ecr_url: "arn:aws:ecr:ap-northeast-2:644329934495:repository/*"
  role_arn: "arn:aws:iam::644329934495:role/ecr-github-action-oidc-role"
  aws_region: "ap-northeast-2"
  repository: "ohrory218"
  #image_tag: ${{ github.sha }}
  image_name: "helloworld"
  image_tag: "1.1"
  ecr_image_tag: 

jobs:
  build_tag_push: # job 고유 식별자
    name: "# 이미지 빌드 및 도커 푸시"
    runs-on: ubuntu-latest

    permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout

    steps:
      - name: "1. github runner에 레파지토리 체크아웃"
        uses: actions/checkout@v3

      # Before each of the following examples, make sure to include the following:
      - name: "2. AWS credential 설정"
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.aws_region }}
          role-session-name: GitHubActions
          role-to-assume: ${{ env.role_arn }}

      # Login to Amazon ECR Private, then build and push a Docker image: (cf. public)
      - name: "3. AMAZON ECR 로그인"
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: "4. 도커 이미지 BUILD, TAG"
        #env:
        #  REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        #  REPOSITORY: my-ecr-repo
        run: |
          pwd
          ls
          docker build --tag ${{ env.repository }}/${{ env.image_name }}:${{ env.image_tag }} .

      - name: "5. AMAZON ECR에 PUSH"
        run: |
          docker tag ${{ env.repository }}/${{ env.image_name }}:${{ env.image_tag }} ${{ steps.login-ecr.outputs.registry }}/${{ env.repository }}:${{ env.aws_image_tag }}
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.repository }}:${{ env.aws_image_tag }}
