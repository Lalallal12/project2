# # https://github.com/aws-actions/amazon-ecr-login#login-to-amazon-ecr-public-then-build-and-push-a-docker-image
# name: build and push docker image to AWS ECR

# on:
#   push:
#     branches: [ "main", "rora" ]
#   pull_request:
#     branches: [ "main", "rora" ]
  
# env:
#   role_arn: ${{ secrets.RORA_ECR_ROLE_ARN }}
#   aws_region: "ap-northeast-2"
#   repository: "ohrory218"
#   aws_image_tag: ${{ github.sha }}
#   image_name: "helloworld"

# jobs:
#   build_and_push_ecs: # job 고유 식별자
#     name: "# ECR 로그인 후 도커 이미지 BUILD, ECR에 PUSH"
#     runs-on: ubuntu-latest

#     permissions:
#       id-token: write   # This is required for requesting the JWT
#       contents: read    # This is required for actions/checkout

#     steps:
#       - name: "1. github runner에 레파지토리 체크아웃"
#         uses: actions/checkout@v3

#       # Before each of the following examples, make sure to include the following:
#       - name: "2. AWS credential 설정"
#         uses: aws-actions/configure-aws-credentials@v2
#         with:
#           aws-region: ${{ env.aws_region }}
#           role-session-name: GitHubActions
#           role-to-assume: ${{ env.role_arn }}

#       # Login to Amazon ECR Private, then build and push a Docker image: (cf. public)
#       - name: "3. AMAZON ECR 로그인"
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v1

#       - name: "4. 도커 이미지 Build & AMAZON ECR에 도커 이미지 PUSH"
#         run: |
#           cd ./helloworld-was
#           docker build -t ${{ steps.login-ecr.outputs.registry }}/${{ env.repository }}:${{ env.aws_image_tag }} .
#           docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.repository }}:${{ env.aws_image_tag }}
